# Generated by Django 5.2 on 2025-08-25 13:52

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('capacite_max', models.PositiveSmallIntegerField(default=30)),
                ('heure_debut', models.TimeField()),
                ('heure_fin', models.TimeField()),
                ('est_actif', models.BooleanField(default=True)),
                ('frais_inscription', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('frais_mensuel', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('frais_dossier', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
            options={
                'verbose_name': 'Classe',
                'verbose_name_plural': 'Classes',
                'ordering': ['niveau__ordre', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='DomaineFormation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('icone', models.CharField(blank=True, help_text="Classe d'icône (ex: fa-laptop-code)", max_length=50, null=True)),
                ('couleur', models.CharField(default='#3498db', help_text='Code couleur hexadécimal', max_length=20)),
                ('ordre_affichage', models.PositiveSmallIntegerField(default=0)),
                ('est_actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Domaine de formation',
                'verbose_name_plural': 'Domaines de formation',
                'ordering': ['ordre_affichage', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='PersonnelAdministratif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricule', models.CharField(max_length=20, unique=True)),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('date_naissance', models.DateField()),
                ('lieu_naissance', models.CharField(max_length=100)),
                ('genre', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1)),
                ('adresse', models.TextField()),
                ('telephone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='personnel/photos/')),
                ('date_embauche', models.DateField()),
                ('numero_cnss', models.CharField(blank=True, max_length=50, null=True)),
                ('numero_cimr', models.CharField(blank=True, max_length=50, null=True)),
                ('banque', models.CharField(blank=True, max_length=100, null=True)),
                ('rib', models.CharField(blank=True, max_length=50, null=True)),
                ('actif', models.BooleanField(default=True)),
                ('date_depart', models.DateField(blank=True, null=True)),
                ('motif_depart', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Personnel administratif',
                'verbose_name_plural': 'Personnel administratif',
                'ordering': ['nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='NiveauScolaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('cycle', models.CharField(choices=[('maternelle', 'Maternelle'), ('primaire', 'Primaire'), ('college', 'Collège'), ('lycee', 'Lycée'), ('superieur', 'Supérieur')], max_length=20)),
                ('ordre', models.PositiveSmallIntegerField(help_text="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Niveau scolaire',
                'verbose_name_plural': 'Niveaux scolaires',
                'ordering': ['ordre', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Poste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intitule', models.CharField(max_length=100)),
                ('type_poste', models.CharField(choices=[('direction', 'Direction'), ('administration', 'Administration'), ('enseignement', 'Enseignement'), ('vie_scolaire', 'Vie scolaire'), ('comptabilite', 'Comptabilité'), ('maintenance', 'Maintenance'), ('autre', 'Autre')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('salaire_base', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('avantages', models.TextField(blank=True, null=True)),
                ('actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Poste',
                'verbose_name_plural': 'Postes',
                'ordering': ['type_poste', 'intitule'],
            },
        ),
        migrations.CreateModel(
            name='Conducteur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricule', models.CharField(max_length=20, unique=True)),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('date_naissance', models.DateField()),
                ('lieu_naissance', models.CharField(max_length=100)),
                ('genre', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1)),
                ('adresse', models.TextField()),
                ('telephone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='conducteurs/photos/')),
                ('numero_permis', models.CharField(max_length=50)),
                ('categorie_permis', models.CharField(max_length=10)),
                ('date_emission_permis', models.DateField()),
                ('date_expiration_permis', models.DateField()),
                ('date_embauche', models.DateField()),
                ('salaire', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('inactif', 'Inactif'), ('suspendu', 'Suspendu')], default='actif', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Conducteur',
                'verbose_name_plural': 'Conducteurs',
                'ordering': ['nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricule', models.CharField(max_length=20, unique=True)),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('date_naissance', models.DateField()),
                ('lieu_naissance', models.CharField(max_length=100)),
                ('genre', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1)),
                ('adresse', models.TextField()),
                ('telephone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='eleves/photos/')),
                ('date_inscription', models.DateTimeField(auto_now_add=True)),
                ('nationalite', models.CharField(default='Marocaine', max_length=50)),
                ('nom_pere', models.CharField(max_length=100)),
                ('profession_pere', models.CharField(max_length=100)),
                ('telephone_pere', models.CharField(max_length=20)),
                ('nom_mere', models.CharField(max_length=100)),
                ('profession_mere', models.CharField(max_length=100)),
                ('telephone_mere', models.CharField(max_length=20)),
                ('groupe_sanguin', models.CharField(blank=True, max_length=5, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('maladies_chroniques', models.TextField(blank=True, null=True)),
                ('actif', models.BooleanField(default=True)),
                ('date_sortie', models.DateField(blank=True, null=True)),
                ('motif_sortie', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Élève',
                'verbose_name_plural': 'Élèves',
                'ordering': ['nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('personneladministratif_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ecole.personneladministratif')),
                ('specialite', models.CharField(max_length=100)),
                ('niveau_etude', models.CharField(choices=[('bac_plus_2', 'Bac +2'), ('licence', 'Licence'), ('master', 'Master'), ('doctorat', 'Doctorat'), ('autre', 'Autre')], max_length=20)),
                ('diplome', models.CharField(max_length=100)),
                ('annee_experience', models.PositiveIntegerField(default=0)),
                ('temps_plein', models.BooleanField(default=True)),
                ('heures_semaine', models.PositiveSmallIntegerField(default=20)),
                ('cv', models.FileField(blank=True, null=True, upload_to='enseignants/cv/')),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Enseignant',
                'verbose_name_plural': 'Enseignants',
            },
            bases=('ecole.personneladministratif',),
        ),
        migrations.CreateModel(
            name='Formation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('intitule', models.CharField(max_length=200)),
                ('type_formation', models.CharField(choices=[('presentiel', 'Présentiel'), ('distanciel', 'Distanciel'), ('hybride', 'Hybride')], default='presentiel', max_length=20)),
                ('niveau', models.CharField(choices=[('debutant', 'Débutant'), ('intermediaire', 'Intermédiaire'), ('avance', 'Avancé'), ('expert', 'Expert')], default='debutant', max_length=20)),
                ('duree_heures', models.PositiveIntegerField(help_text='Durée totale en heures')),
                ('duree_mois', models.PositiveSmallIntegerField(help_text='Durée en mois')),
                ('objectifs', models.TextField(help_text='Objectifs pédagogiques')),
                ('programme', models.TextField(help_text='Détail du programme')),
                ('prerequis', models.TextField(blank=True, help_text='Prérequis pour suivre la formation', null=True)),
                ('public_cible', models.TextField(blank=True, help_text='Public cible', null=True)),
                ('lieu', models.TextField(blank=True, null=True)),
                ('horaires', models.CharField(blank=True, max_length=200, null=True)),
                ('date_debut', models.DateField(blank=True, null=True)),
                ('date_fin', models.DateField(blank=True, null=True)),
                ('prix_ht', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('tva', models.DecimalField(decimal_places=2, default=20, help_text='TVA en pourcentage', max_digits=5)),
                ('prix_ttc', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('frais_inscription', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('paiement_echelonne', models.BooleanField(default=False)),
                ('nombre_tranches', models.PositiveSmallIntegerField(default=1, help_text='Nombre de tranches de paiement')),
                ('est_certifiante', models.BooleanField(default=False)),
                ('certification', models.CharField(blank=True, max_length=200, null=True)),
                ('places_disponibles', models.PositiveSmallIntegerField()),
                ('est_public', models.BooleanField(default=True, help_text='Visible sur le site web public')),
                ('est_actif', models.BooleanField(default=True)),
                ('image_couverture', models.ImageField(blank=True, null=True, upload_to='formations/couverture/')),
                ('slug', models.SlugField(allow_unicode=True, max_length=250, unique=True)),
                ('mots_cles', models.CharField(blank=True, help_text='Mots-clés pour la recherche, séparés par des virgules', max_length=250, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_mise_a_jour', models.DateTimeField(auto_now=True)),
                ('domaine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='formations', to='ecole.domaineformation')),
            ],
            options={
                'verbose_name': 'Formation',
                'verbose_name_plural': 'Formations',
                'ordering': ['domaine', 'niveau', 'intitule'],
            },
        ),
        migrations.CreateModel(
            name='Inscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee_scolaire', models.CharField(max_length=9)),
                ('date_inscription', models.DateField(auto_now_add=True)),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('validee', 'Validée'), ('refusee', 'Refusée'), ('annulee', 'Annulée')], default='en_attente', max_length=20)),
                ('frais_inscription', models.DecimalField(decimal_places=2, max_digits=10)),
                ('frais_scolarite_mensuels', models.DecimalField(decimal_places=2, max_digits=10)),
                ('frais_dossier', models.DecimalField(decimal_places=2, max_digits=10)),
                ('frais_assurance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('frais_transport', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('reduction', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('montant_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('utilise_transport', models.BooleanField(default=False)),
                ('dossier_complet', models.BooleanField(default=False)),
                ('documents_manquants', models.TextField(blank=True, null=True)),
                ('classe', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecole.classe')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscriptions', to='ecole.eleve')),
            ],
            options={
                'ordering': ['-annee_scolaire', 'eleve__nom', 'eleve__prenom'],
            },
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('date_emission', models.DateField(default=django.utils.timezone.now)),
                ('date_echeance', models.DateField()),
                ('statut', models.CharField(choices=[('brouillon', 'Brouillon'), ('emise', 'Emise'), ('payee', 'Payée'), ('en_retard', 'En retard'), ('annulee', 'Annulée')], default='brouillon', max_length=20)),
                ('montant_ht', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('tva', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('montant_ttc', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('montant_restant', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('notes', models.TextField(blank=True, null=True)),
                ('date_paiement', models.DateField(blank=True, null=True)),
                ('mode_paiement', models.CharField(blank=True, max_length=50, null=True)),
                ('reference_paiement', models.CharField(blank=True, max_length=100, null=True)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='factures', to='ecole.eleve')),
                ('inscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='factures', to='ecole.inscription')),
            ],
            options={
                'verbose_name': 'Facture',
                'verbose_name_plural': 'Factures',
                'ordering': ['-date_emission', 'reference'],
            },
        ),
        migrations.CreateModel(
            name='InscriptionFormation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_inscription', models.DateTimeField(auto_now_add=True)),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('confirme', 'Confirmée'), ('refusee', 'Refusée'), ('annulee', 'Annulée'), ('en_cours', 'En cours'), ('abandon', 'Abandon'), ('termine', 'Terminée')], default='en_attente', max_length=20)),
                ('motivation', models.TextField(blank=True, help_text='Pourquoi souhaitez-vous suivre cette formation ?', null=True)),
                ('experience', models.TextField(blank=True, help_text='Votre expérience dans le domaine', null=True)),
                ('attentes', models.TextField(blank=True, help_text='Vos attentes par rapport à cette formation', null=True)),
                ('montant_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reduction', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('montant_paye', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('solde_restant', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('note_finale', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('mention', models.CharField(blank=True, max_length=50, null=True)),
                ('certificat_delivre', models.BooleanField(default=False)),
                ('date_delivrance_certificat', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Notes internes', null=True)),
                ('date_mise_a_jour', models.DateTimeField(auto_now=True)),
                ('apprenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inscriptions_formation', to='ecole.eleve')),
            ],
            options={
                'verbose_name': 'Inscription à une formation',
                'verbose_name_plural': 'Inscriptions aux formations',
                'ordering': ['-date_inscription'],
            },
        ),
        migrations.CreateModel(
            name='Itineraire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('points_ramassage', models.TextField(help_text='Liste des arrêts, un par ligne')),
                ('heure_depart', models.TimeField()),
                ('heure_retour', models.TimeField()),
                ('capacite_max', models.PositiveSmallIntegerField()),
                ('actif', models.BooleanField(default=True)),
                ('lundi', models.BooleanField(default=True)),
                ('mardi', models.BooleanField(default=True)),
                ('mercredi', models.BooleanField(default=True)),
                ('jeudi', models.BooleanField(default=True)),
                ('vendredi', models.BooleanField(default=True)),
                ('samedi', models.BooleanField(default=False)),
                ('dimanche', models.BooleanField(default=False)),
                ('frais_mensuel', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('conducteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='itineraires', to='ecole.conducteur')),
            ],
            options={
                'verbose_name': 'Itinéraire',
                'verbose_name_plural': 'Itinéraires',
                'ordering': ['heure_depart', 'code'],
            },
        ),
        migrations.AddField(
            model_name='inscription',
            name='itineraire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecole.itineraire'),
        ),
        migrations.CreateModel(
            name='AbonnementTransport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField(blank=True, null=True)),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('en_attente', 'En attente'), ('suspendu', 'Suspendu'), ('annule', 'Annulé'), ('expire', 'Expiré')], default='actif', max_length=20)),
                ('point_embarquement', models.CharField(max_length=200)),
                ('point_debarquement', models.CharField(max_length=200)),
                ('montant_mensuel', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reduction', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('montant_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_mise_a_jour', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abonnements_transport', to='ecole.eleve')),
                ('itineraire', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='abonnements', to='ecole.itineraire')),
            ],
            options={
                'verbose_name': 'Abonnement transport',
                'verbose_name_plural': 'Abonnements transport',
                'ordering': ['-date_debut', 'eleve__nom', 'eleve__prenom'],
            },
        ),
        migrations.CreateModel(
            name='LigneFacture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=200)),
                ('quantite', models.DecimalField(decimal_places=2, default=1, max_digits=10)),
                ('prix_unitaire', models.DecimalField(decimal_places=2, max_digits=10)),
                ('montant_ht', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tva_taux', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('tva_montant', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('montant_ttc', models.DecimalField(decimal_places=2, max_digits=10)),
                ('facture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lignes', to='ecole.facture')),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('coefficient', models.PositiveSmallIntegerField(default=1)),
                ('heures_semaine', models.FloatField(help_text="Nombre d'heures par semaine")),
                ('est_obligatoire', models.BooleanField(default=True)),
                ('est_actif', models.BooleanField(default=True)),
                ('niveaux', models.ManyToManyField(related_name='matieres', to='ecole.niveauscolaire')),
            ],
            options={
                'verbose_name': 'Matière',
                'verbose_name_plural': 'Matières',
                'ordering': ['code', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='FraisScolarite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_frais', models.CharField(choices=[('inscription', "Frais d'inscription"), ('mensualite', 'Mensualité'), ('dossier', 'Frais de dossier'), ('assurance', 'Assurance scolaire'), ('transport', 'Transport scolaire'), ('fourniture', 'Fournitures scolaires'), ('activite', 'Activités'), ('autre', 'Autre')], max_length=20)),
                ('libelle', models.CharField(max_length=100)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('periodicite', models.CharField(choices=[('unique', 'Paiement unique'), ('mensuel', 'Mensuel'), ('trimestriel', 'Trimestriel'), ('annuel', 'Annuel')], default='unique', max_length=20)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField(blank=True, null=True)),
                ('actif', models.BooleanField(default=True)),
                ('classe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecole.classe')),
                ('niveau', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecole.niveauscolaire')),
            ],
            options={
                'verbose_name': 'Frais de scolarité',
                'verbose_name_plural': 'Frais de scolarité',
            },
        ),
        migrations.AddField(
            model_name='classe',
            name='niveau',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='ecole.niveauscolaire'),
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('date_paiement', models.DateField(default=django.utils.timezone.now)),
                ('mode_paiement', models.CharField(choices=[('espece', 'Espèces'), ('cheque', 'Chèque'), ('virement', 'Virement bancaire'), ('prelevement', 'Prélèvement'), ('carte', 'Carte bancaire'), ('autre', 'Autre')], max_length=20)),
                ('reference_paiement', models.CharField(blank=True, max_length=100, null=True)),
                ('banque_emetteur', models.CharField(blank=True, max_length=100, null=True)),
                ('date_encaissement', models.DateField(blank=True, null=True)),
                ('encaisse', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('facture', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='paiements', to='ecole.facture')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
                'ordering': ['-date_paiement', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaiementFormation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('date_paiement', models.DateField()),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('mode_paiement', models.CharField(choices=[('espece', 'Espèces'), ('cheque', 'Chèque'), ('virement', 'Virement bancaire'), ('prelevement', 'Prélèvement'), ('carte', 'Carte bancaire'), ('autre', 'Autre')], max_length=20)),
                ('reference_paiement', models.CharField(blank=True, max_length=100, null=True)),
                ('banque_emetteur', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('inscription', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='paiements', to='ecole.inscriptionformation')),
            ],
            options={
                'verbose_name': 'Paiement formation',
                'verbose_name_plural': 'Paiements formations',
                'ordering': ['-date_paiement', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='personneladministratif',
            name='poste',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecole.poste'),
        ),
        migrations.CreateModel(
            name='SessionFormation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('horaires', models.CharField(help_text='Ex: Lundi et jeudi de 18h à 21h', max_length=200)),
                ('lieu', models.TextField(blank=True, null=True)),
                ('places_disponibles', models.PositiveSmallIntegerField()),
                ('statut', models.CharField(choices=[('planifiee', 'Planifiée'), ('en_cours', 'En cours'), ('terminee', 'Terminée'), ('annulee', 'Annulée')], default='planifiee', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_mise_a_jour', models.DateTimeField(auto_now=True)),
                ('formation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='ecole.formation')),
                ('formateurs', models.ManyToManyField(related_name='sessions_formation', to='ecole.enseignant')),
            ],
            options={
                'verbose_name': 'Session de formation',
                'verbose_name_plural': 'Sessions de formation',
                'ordering': ['date_debut', 'formation'],
            },
        ),
        migrations.AddField(
            model_name='inscriptionformation',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inscriptions', to='ecole.sessionformation'),
        ),
        migrations.CreateModel(
            name='Vehicule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('immatriculation', models.CharField(max_length=20, unique=True)),
                ('type_vehicule', models.CharField(choices=[('bus', 'Bus scolaire'), ('minibus', 'Minibus'), ('voiture', 'Voiture de service'), ('autre', 'Autre')], max_length=20)),
                ('marque', models.CharField(max_length=50)),
                ('modele', models.CharField(max_length=50)),
                ('annee', models.PositiveSmallIntegerField()),
                ('capacite', models.PositiveSmallIntegerField(help_text='Nombre maximum de passagers')),
                ('date_mise_en_service', models.DateField()),
                ('date_derniere_revision', models.DateField(blank=True, null=True)),
                ('date_prochaine_revision', models.DateField(blank=True, null=True)),
                ('statut', models.CharField(choices=[('en_service', 'En service'), ('en_maintenance', 'En maintenance'), ('hors_service', 'Hors service')], default='en_service', max_length=20)),
                ('assurance_numero', models.CharField(blank=True, max_length=50, null=True)),
                ('assurance_expiration', models.DateField(blank=True, null=True)),
                ('controle_technique', models.DateField(blank=True, null=True)),
                ('kilometrage', models.PositiveIntegerField(default=0, help_text='Kilométrage actuel')),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('conducteur_attitre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicules', to='ecole.conducteur')),
            ],
            options={
                'verbose_name': 'Véhicule',
                'verbose_name_plural': 'Véhicules',
                'ordering': ['type_vehicule', 'marque', 'modele'],
            },
        ),
        migrations.AddField(
            model_name='itineraire',
            name='vehicule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='itineraires', to='ecole.vehicule'),
        ),
        migrations.AddField(
            model_name='enseignant',
            name='matieres',
            field=models.ManyToManyField(related_name='enseignants', to='ecole.matiere'),
        ),
        migrations.CreateModel(
            name='ContratEnseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_contrat', models.CharField(choices=[('cdi', 'CDI'), ('cdd', 'CDD'), ('vacataire', 'Vacataire'), ('stagiaire', 'Stagiaire'), ('autre', 'Autre')], max_length=20)),
                ('reference', models.CharField(max_length=50, unique=True)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField(blank=True, null=True)),
                ('salaire_brut', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prime', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('avantages', models.TextField(blank=True, null=True)),
                ('statut', models.CharField(choices=[('en_cours', 'En cours'), ('termine', 'Terminé'), ('resilie', 'Résilié')], default='en_cours', max_length=20)),
                ('fichier_contrat', models.FileField(blank=True, null=True, upload_to='contrats/enseignants/')),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contrats', to='ecole.enseignant')),
            ],
            options={
                'verbose_name': 'Contrat enseignant',
                'verbose_name_plural': 'Contrats enseignants',
                'ordering': ['-date_debut', 'enseignant__nom'],
            },
        ),
        migrations.AddField(
            model_name='classe',
            name='responsable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classes_dirigees', to='ecole.enseignant'),
        ),
        migrations.AlterUniqueTogether(
            name='inscription',
            unique_together={('eleve', 'annee_scolaire')},
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('duree_heures', models.PositiveIntegerField(help_text='Durée en heures')),
                ('ordre', models.PositiveSmallIntegerField(default=0, help_text="Ordre d'affichage")),
                ('objectifs', models.TextField(help_text="Objectifs d'apprentissage")),
                ('contenu', models.TextField(help_text='Contenu détaillé')),
                ('prerequis', models.TextField(blank=True, null=True)),
                ('supports_pedagogiques', models.TextField(blank=True, help_text='Liens ou références des supports', null=True)),
                ('formation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='ecole.formation')),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Modules',
                'ordering': ['formation', 'ordre', 'titre'],
                'unique_together': {('formation', 'titre')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='inscriptionformation',
            unique_together={('session', 'apprenant')},
        ),
        migrations.CreateModel(
            name='TrajetJournalier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('heure_depart_reelle', models.TimeField(blank=True, null=True)),
                ('heure_arrivee_reelle', models.TimeField(blank=True, null=True)),
                ('kilometrage_depart', models.PositiveIntegerField(blank=True, null=True)),
                ('kilometrage_arrivee', models.PositiveIntegerField(blank=True, null=True)),
                ('nombre_passagers', models.PositiveSmallIntegerField(default=0)),
                ('incidents', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('conducteur_remplacement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trajets_remplacement', to='ecole.conducteur')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('itineraire', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='trajets', to='ecole.itineraire')),
                ('vehicule_remplacement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trajets_remplacement', to='ecole.vehicule')),
            ],
            options={
                'verbose_name': 'Trajet journalier',
                'verbose_name_plural': 'Trajets journaliers',
                'ordering': ['-date', 'itineraire__heure_depart'],
                'unique_together': {('itineraire', 'date')},
            },
        ),
    ]
